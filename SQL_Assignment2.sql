-- Basic Aggregate Functions: 
-- Question 1: Retrieve the total number of rentals made in the Sakila database. Hint: Use the COUNT() function. 
use sakila;
select * from rental;
select count(rental_id) as total_rentals from rental;

-- Question 2: Find the average rental duration (in days) of movies rented from the Sakila database. Hint: Utilize the AVG() function. 
select * from rental;
select avg(datediff(return_date, rental_date)) as Rental_duration_Days from rental;

-- String Functions: 
-- Question 3: Display the first name and last name of customers in uppercase. Hint: Use the UPPER () function. 
select * from actor;
select upper(first_name) as FirstName, upper(last_name) as LastName from actor;

-- Question 4: Extract the month from the rental date and display it alongside the rental ID. Hint: Employ the MONTH() function.
select * from rental; 
select rental_id, month(rental_date) as Rental_month from rental;

-- Group by
-- Question 5: Retrieve the count of rentals for each customer (display customer ID and the count of rentals). Hint: Use COUNT () in conjunction with GROUP BY. 
select * from rental;
select customer_id, count(rental_id) as Total_rentals from rental group by customer_id;

-- Question 6: Find the total revenue generated by each store. Hint: Combine SUM() and GROUP BY.
select * from payment; -- staff_id
SELECT 
    s.store_id, SUM(p.amount) AS total_revenue
FROM
    store s
        JOIN
    staff st ON s.store_id = st.store_id
        JOIN
    payment p ON st.staff_id = p.staff_id
GROUP BY s.store_id;

-- Joins:
-- Question 7: Display the title of the movie, customer's first name, and last name who rented it. Hint: Use JOIN between the film, inventory, rental, and customer tables. 
select * from film; -- film_id, title
select * from inventory; -- inventory_id, film_id, store_id
select * from rental; -- inventory_id, customer_id
select * from customer;  -- customer_id, store_id, first_name and lastname

SELECT 
    title AS Movie,
    first_name AS FirstName,
    last_name AS LastName
FROM
    film
        INNER JOIN
    inventory ON inventory.film_id = film.film_id
        INNER JOIN
    rental ON rental.inventory_id = inventory.inventory_id
		INNER JOIN
	customer on customer.customer_id = rental.customer_id;

-- Question 8: Retrieve the names of all actors who have appeared in the film "Gone with the Wind." Hint: Use JOIN between the film actor, film, and actor tables. 
select * from film; -- film id, title
select * from film_actor; -- film id, actor id
select * from actor; -- actor id, first name, last name

SELECT 
    title AS Movie,
    CONCAT(first_name, ' ', last_name) AS FullName
FROM
    film
        INNER JOIN
    film_actor ON film.film_id = film_actor.film_id
        INNER JOIN
    actor ON actor.actor_id = film_actor.actor_id
    where title = 'Gone with the Wind';
    
select title from film where title = "Gone with the wind";

-- GROUP BY: 
-- Question 1: Determine the total number of rentals for each category of movies. Hint: JOIN film_category, film, and rental tables, then use cOUNT () and GROUP BY. 
select * from film_category; -- film id, category id
select * from film; -- film id, rental duration
select * from inventory; -- film id, inventory id
select * from rental; -- rental id, inventory id
SELECT 
    category_id, COUNT(rental_id) AS Total_rentals
FROM
    rental
        INNER JOIN
    inventory ON inventory.inventory_id = rental.inventory_id
		INNER JOIN
	film on film.film_id = inventory.film_id
		INNER JOIN
	film_category on film_category.film_id = film.film_id
    GROUP BY film_category.category_id;
    
-- Question 2: Find the average rental rate of movies in each language. Hint: JOIN film and language tables, then use AVG () and GROUP BY. 
select * from film; -- film id
select * from language; -- language_id
select name as Language_Name, avg(rental_rate) from film inner join language on film.language_id = language.language_id group by language.name;

-- Joins:
-- Question 3: 
-- Retrieve the customer names along with the total amount they've spent on rentals. Hint: JOIN customer, payment, and rental tables, then use SUM() and GROUP BY. 
select * from customer; -- customer id, first name last name
select * from payment; -- payment id, customer id, rental id, amount
select * from rental; -- rental id

SELECT 
    CONCAT(first_name, ' ', last_name) AS FullName,
    SUM(amount) AS Total
FROM
    customer
        INNER JOIN
    payment ON customer.customer_id = payment.payment_id
        INNER JOIN
    rental ON rental.customer_id = customer.customer_id
    group by customer.customer_id;

-- Question 4: List the titles of movies rented by each customer in a particular city (e.g., 'London'). 
-- Hint: JOIN customer, address, city, rental, inventory, and film tables, then use GROUP BY. 
select * from customer; -- cust id, first name, last name address_id
select * from address; -- address_id, city id, 
select * from city; -- city id, country id 
select * from rental; -- rental id, inventory id, cust id
select * from inventory; -- inventory id, film id
select * from film; -- title, film id

SELECT 
    title AS Movie_Names, CONCAT(first_name, ' ', last_name) as FullName
FROM
    customer
        INNER JOIN
    address ON customer.address_id = address.address_id
		INNER JOIN
	city on city.city_id = address.city_id
		INNER JOIN
	rental on rental.customer_id = customer.customer_id
		INNER JOIN
	inventory on inventory.inventory_id = rental.inventory_id
		INNER JOIN 
        film on inventory.film_id = film.film_id
	WHERE city = "London"
    order by FullName;

-- Advanced Joins and GROUP BY: 
-- Question 5: Display the top 5 rented movies along with the number of times they've been rented. 
-- Hint: JOIN film, inventory, and rental tables, then use cOUNT() and GROUP BY, and limit the results. 
select * from film; -- title, film id
select * from inventory; -- inventory id, film id
select * from rental; -- rental id, inventory id, cust id

SELECT 
    title AS Movies_list, COUNT(*) as Rental_count
FROM
    film f
        INNER JOIN
    inventory i ON f.film_id = i.film_id
        INNER JOIN
    rental r ON r.inventory_id = i.inventory_id
GROUP BY f.title
LIMIT 5;

-- Question 6: Determine the customers who have rented movies from both stores (store ID 1 and store ID 2). 
-- Hint: Use JOINS with rental, inventory, and customer tables and consider COUNT() and GROUP BY. 
select * from rental; -- rental id, inventory id, cust id
select * from inventory; -- inventory id, film id, store_id
select * from customer; -- cust id, first name, last name
select * from store; -- store_id
SELECT 
    c.customer_id, CONCAT(first_name, ' ', last_name) as Full_name
FROM
    customer c
        INNER JOIN
    rental r ON r.customer_id = c.customer_id
        INNER JOIN
    inventory i ON i.inventory_id = r.inventory_id
		INNER JOIN
	store s on s.store_id = i.store_id
    where s.store_id in (1,2)
    group by c.customer_id, Full_name;
    

